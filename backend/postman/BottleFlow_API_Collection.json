{
	"info": {
		"_postman_id": "bottleflow-api-collection",
		"name": "BottleFlow API Collection",
		"description": "Complete API collection for BottleFlow backend testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.tokens.access);",
									"    pm.environment.set('refresh_token', response.tokens.refresh);",
									"    pm.environment.set('user_id', response.user.id);",
									"    pm.environment.set('user_role', response.user.role);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login",
								""
							]
						}
					}
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"me",
								""
							]
						}
					}
				},
				{
					"name": "Create User (Admin Only)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser\",\n    \"password\": \"securepassword123\",\n    \"password_confirm\": \"securepassword123\",\n    \"role\": \"manager\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/create-user/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"create-user",
								""
							]
						}
					}
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/logout/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "List Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								""
							]
						}
					}
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('product_id', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"500ml Plastic Bottle\",\n    \"purchase_price\": \"5.00\",\n    \"wash_price\": \"2.00\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								""
							]
						}
					}
				},
				{
					"name": "Get Product Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"{{product_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"500ml Plastic Bottle - Updated\",\n    \"purchase_price\": \"5.50\",\n    \"wash_price\": \"2.50\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"{{product_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/products/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"{{product_id}}",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "Workers",
			"item": [
				{
					"name": "List Workers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workers",
								""
							]
						}
					}
				},
				{
					"name": "Create Worker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('worker_id', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"phone_number\": \"+254700000001\",\n    \"id_number\": \"12345678\",\n    \"role\": \"Washer\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/workers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workers",
								""
							]
						}
					}
				},
				{
					"name": "Get Worker Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workers/{{worker_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workers",
								"{{worker_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Update Worker",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe Updated\",\n    \"phone_number\": \"+254700000002\",\n    \"id_number\": \"12345678\",\n    \"role\": \"Supervisor\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/workers/{{worker_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workers",
								"{{worker_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Delete Worker (Deactivate)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/workers/{{worker_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"workers",
								"{{worker_id}}",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "Purchases",
			"item": [
				{
					"name": "List Purchases",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/purchases/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"purchases",
								""
							]
						}
					}
				},
				{
					"name": "List Purchases (Summary)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/purchases/?summary=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"purchases",
								""
							],
							"query": [
								{
									"key": "summary",
									"value": "true"
								}
							]
						}
					}
				},
				{
					"name": "Create Purchase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('purchase_id', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2024-01-15\",\n    \"amount_paid\": \"1000.00\",\n    \"notes\": \"Monthly inventory purchase\",\n    \"items\": [\n        {\n            \"product\": \"{{product_id}}\",\n            \"quantity\": 100,\n            \"cost\": \"500.00\"\n        },\n        {\n            \"product\": \"{{product_id}}\",\n            \"quantity\": 50,\n            \"cost\": \"500.00\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/purchases/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"purchases",
								""
							]
						}
					}
				},
				{
					"name": "Get Purchase Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/purchases/{{purchase_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"purchases",
								"{{purchase_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Update Purchase Payment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount_paid\": \"1200.00\",\n    \"notes\": \"Additional payment made\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/purchases/{{purchase_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"purchases",
								"{{purchase_id}}",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "List Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								""
							]
						}
					}
				},
				{
					"name": "List Tasks (Summary)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/?summary=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								""
							],
							"query": [
								{
									"key": "summary",
									"value": "true"
								}
							]
						}
					}
				},
				{
					"name": "Create Washing Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('task_id', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"worker\": \"{{worker_id}}\",\n    \"product\": \"{{product_id}}\",\n    \"task_type\": \"washing\",\n    \"assigned_quantity\": 100,\n    \"salary\": \"200.00\",\n    \"deduction\": \"10.00\",\n    \"date\": \"2024-01-15\",\n    \"notes\": \"Regular washing task\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								""
							]
						}
					}
				},
				{
					"name": "Create Daily Salary Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"worker\": \"{{worker_id}}\",\n    \"salary\": \"500.00\",\n    \"deduction\": \"50.00\",\n    \"date\": \"2024-01-15\",\n    \"notes\": \"Daily salary for supervisor\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/daily-salary/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"daily-salary",
								""
							]
						}
					}
				},
				{
					"name": "Get Task Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Update Task Progress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"washed_quantity\": 85,\n    \"notes\": \"Good progress, 85 bottles completed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/{{task_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"{{task_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Get Worker Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/worker/{{worker_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"worker",
								"{{worker_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Get Task Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/statistics/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"statistics",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "Stock",
			"item": [
				{
					"name": "Stock Overview",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stock/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stock",
								""
							]
						}
					}
				},
				{
					"name": "Stock Movements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stock/movements/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stock",
								"movements",
								""
							]
						}
					}
				},
				{
					"name": "Stock Movements (Filtered)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stock/movements/?product_id={{product_id}}&type=purchase",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stock",
								"movements",
								""
							],
							"query": [
								{
									"key": "product_id",
									"value": "{{product_id}}"
								},
								{
									"key": "type",
									"value": "purchase"
								}
							]
						}
					}
				},
				{
					"name": "Stock Sales",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stock/sales/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stock",
								"sales",
								""
							]
						}
					}
				},
				{
					"name": "Record Stock Sale",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product\": \"{{product_id}}\",\n    \"sale_type\": \"washed\",\n    \"quantity\": 50,\n    \"price_per_unit\": \"3.00\",\n    \"customer_name\": \"ABC Restaurant\",\n    \"date\": \"2024-01-15\",\n    \"notes\": \"Regular customer order\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/stock/sell/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stock",
								"sell",
								""
							]
						}
					}
				},
				{
					"name": "Product Stock Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stock/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stock",
								"{{product_id}}",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "Salaries",
			"item": [
				{
					"name": "Pending Salaries",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/salaries/pending/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"salaries",
								"pending",
								""
							]
						}
					}
				},
				{
					"name": "Pending Salaries (Include Zero)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/salaries/pending/?include_zero=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"salaries",
								"pending",
								""
							],
							"query": [
								{
									"key": "include_zero",
									"value": "true"
								}
							]
						}
					}
				},
				{
					"name": "List Salary Payments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/salaries/payments/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"salaries",
								"payments",
								""
							]
						}
					}
				},
				{
					"name": "Create Salary Payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"worker\": \"{{worker_id}}\",\n    \"amount\": \"300.00\",\n    \"date\": \"2024-01-15\",\n    \"payment_method\": \"Cash\",\n    \"notes\": \"Partial salary payment\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/salaries/payments/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"salaries",
								"payments",
								""
							]
						}
					}
				},
				{
					"name": "Worker Salary History",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/salaries/worker/{{worker_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"salaries",
								"worker",
								"{{worker_id}}",
								""
							]
						}
					}
				},
				{
					"name": "Salary Summary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/salaries/summary/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"salaries",
								"summary",
								""
							]
						}
					}
				}
			]
		},
		{
			"name": "Audit (Admin Only)",
			"item": [
				{
					"name": "Audit Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/audit/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit",
								""
							]
						}
					}
				},
				{
					"name": "Audit Logs (Summary)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/audit/?summary=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit",
								""
							],
							"query": [
								{
									"key": "summary",
									"value": "true"
								}
							]
						}
					}
				},
				{
					"name": "Audit Logs (Filtered)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/audit/?action=CREATE_PRODUCT&start_date=2024-01-01&end_date=2024-01-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit",
								""
							],
							"query": [
								{
									"key": "action",
									"value": "CREATE_PRODUCT"
								},
								{
									"key": "start_date",
									"value": "2024-01-01"
								},
								{
									"key": "end_date",
									"value": "2024-01-31"
								}
							]
						}
					}
				},
				{
					"name": "Audit Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/audit/statistics/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"audit",
								"statistics",
								""
							]
						}
					}
				}
			]
		}
	]
}
